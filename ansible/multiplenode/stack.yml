- name: Setup DB Server
  hosts: dbnodes
  become: yes
  tags:
    - DB
  tasks:
    - name: Installed MariaDB Server.
      package:
        name: "{{item}}"
        state: installed
      loop:
        - mariadb-server
        - MySQL-python
    
    - name: Start MariaDB Service
      service:
        name: mariadb
        state: started
        enabled: yes

    - name: Create studentapp DB
      mysql_db:
        name: studentapp
        state: present
    - name: Create student.sql file
      blockinfile:
        path: /tmp/student.sql
        create: yes
        block: |
          CREATE TABLE if not exists Students(student_id INT NOT NULL AUTO_INCREMENT,
            student_name VARCHAR(100) NOT NULL,
            student_addr VARCHAR(100) NOT NULL,
            student_age VARCHAR(3) NOT NULL,
            student_qual VARCHAR(20) NOT NULL,
            student_percent VARCHAR(10) NOT NULL,
            student_year_passed VARCHAR(10) NOT NULL,
            PRIMARY KEY (student_id)
          );
    - name: Create database schema.
      mysql_db:
        name: studentapp
        state: import
        target: /tmp/student.sql
    
    - name: Create DB User.
      mysql_user:
        name: student
        password: student@1
        priv: 'studentapp.*:ALL'
        state: present
        host: '%'

- name: Setup Application Server.
  hosts: appnodes
  become: yes
  tags:
    - APP
  vars:
    URL: http://redrockdigimark.com/apachemirror/tomcat/tomcat-9/v9.0.8/bin/apache-tomcat-9.0.8.tar.gz
    WARURL: https://github.com/cit-aliqui/APP-STACK/raw/master/student.war
    JDBCURL: https://github.com/cit-aliqui/APP-STACK/raw/master/mysql-connector-java-5.1.40.jar
  gather_facts: true

  tasks:
    - name: Install Java
      package:
        name: java
        state: installed

    - name: Run filters
      shell: echo {{URL}} | awk -F / '{print $NF}' | sed -e 's/.tar.gz//'
      register: out
    
    - name: Define TAR Variable
      set_fact:
        TOMCAT_DIR: "{{out.stdout}}"
    
    - name: Check if tomcat already exists..
      shell: ls -ld "/opt/{{TOMCAT_DIR}}"
      register: out
      ignore_errors: True

    - name: Download Tomcat
      unarchive:
        src: "{{URL}}"
        dest: /opt
        remote_src: yes
      when: out.rc != 0

    - name: List files of webapps.
      find:
        path: /opt/apache-tomcat-9.0.8/webapps
        file_type: any
      register: out

    - name: Delete webapps
      file:
        path: "{{item.path}}"
        state: absent
      with_items: "{{out.files}}"

    - name: Download WAR files
      get_url:
        url: "{{WARURL}}"
        dest: "/opt/{{TOMCAT_DIR}}/webapps/student.war"

    - name: Download JDBC file
      get_url:
        url: "{{JDBCURL}}"
        dest: "/opt/{{TOMCAT_DIR}}/lib/mysql-connector-java-5.1.40.jar"
    
    - name: Add JDBC connection
      lineinfile:
        path: "/opt/{{TOMCAT_DIR}}/conf/context.xml"
        line: <Resource name="jdbc/TestDB" auth="Container" type="javax.sql.DataSource" maxActive="50" maxIdle="30" maxWait="10000" username="student" password="student@1" driverClassName="com.mysql.jdbc.Driver" url="jdbc:mysql://{{hostvars[groups['dbnodes'][0]]['ansible_eth0']['ipv4']['address']}}:3306/studentapp"/>
        insertbefore: '</Context>'

    - name: Check tomcat running or not.
      shell: ps -ef | grep java | grep {{TOMCAT_DIR}} | grep -v grep
      register: out
      ignore_errors: yes

    - name: Stop tomcat if running
      when: out.rc == 0
      shell: nohup /opt/{{TOMCAT_DIR}}/bin/shutdown.sh
    
    - name: Start Tomcat
      shell: nohup /opt/{{TOMCAT_DIR}}/bin/startup.sh

- name: Setup Web server
  hosts: appnodes
  become: yes
  tags:
    - WEB
  tasks:
    - name: Install Web Server.
      package:
        name: httpd
        state: installed

    - name: Download MOD_JK library.
      get_url:
        url: https://github.com/cit-astrum/project-manual/raw/master/mod_jk.so
        dest: /etc/httpd/modules/mod_jk.so
        mode: 0755
    
    - name: Create mod-jk configuration file
      blockinfile:
        path: /etc/httpd/conf.d/mod-jk.conf
        create: yes
        block: |
          LoadModule jk_module modules/mod_jk.so
          JkWorkersFile conf.d/worker.properties
          JkMount /student local
          JkMount /student/* local

    - name: Create tomcat workers file
      blockinfile:
        path: /etc/httpd/conf.d/worker.properties
        create: yes
        block: |
          worker.list=local
          worker.local.host=localhost
          worker.local.port=8009

    - name: Restart web service
      service:
        name: httpd
        state: restarted
        enabled: yes
